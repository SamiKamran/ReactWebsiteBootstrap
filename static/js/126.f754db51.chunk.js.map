{"version":3,"file":"static/js/126.f754db51.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","contact/Contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","\r\nimport './index.css'\r\nimport  mapImages from '../img/image 112.png'\r\nimport { Container } from 'react-bootstrap'\r\nimport React, { useRef } from 'react'\r\nimport emailjs from '@emailjs/browser';\r\nfunction Contact() {\r\n    const form = useRef();\r\n\r\n    const sendEmail = (e) => {\r\n      e.preventDefault();\r\n  \r\n      emailjs.sendForm('service_yul4jc3', 'template_1bdy4xg', form.current, 'J84A-d6yZA9GRSQcQ')\r\n        .then((result) => {\r\n            form.current.reset(); // Clear the form fields\r\n            window.location.reload(); // Reload the page\r\n        }, (error) => {\r\n            console.log(error.text);\r\n        });\r\n\r\n      \r\n        \r\n    };\r\n\r\n  return (\r\n\r\n<div className='contact-parent'>\r\n    <Container className='container-contact'>\r\n\r\n\r\n\r\n        <div className=\"content-wrapper\">\r\n\r\n<h1>Contact Us</h1>\r\n<p>We consider all the drivers of change gives you the components <br/> you need to change to create a truly happens.</p>\r\n\r\n\r\n        </div>\r\n\r\n<section className=\"contact\" id=\"contact\">\r\n\r\n\r\n    <form ref={form} onSubmit={sendEmail}>\r\n\r\n\r\n\r\n<div className=\"inputbox\">\r\n    <div className=\"content-form\">\r\n\r\n    <label >Name</label>\r\n    <input name='user_name' type=\"text\" placeholder='Enter your Name'  required />\r\n  \r\n    </div>\r\n\r\n<div className=\"content-form\">\r\n\r\n    <label >Email</label>\r\n    <input name='user_email'  type=\r\n    \"email\"   required  placeholder='Enter your Email'/>\r\n</div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"inputbox-percent\">\r\n    <label >Subject</label>\r\n    <input type=\"text\" placeholder='Subject' />\r\n</div>\r\n\r\n<div className=\"inputbox-percent-messages\">\r\n    <label >Messages</label>\r\n    <textarea\r\n    \r\n    name=\"message\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          placeholder=\"Write Your Messages\"\r\n\r\n        ></textarea>\r\n</div>\r\n\r\n\r\n\r\n<div className=\"inputbox-percent\">\r\n    <button className=\"btn\" type=\"submit\" value=\"Send\">\r\n        Submit\r\n    </button>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n    </form>\r\n\r\n\r\n\r\n</section>\r\n    \r\n    </Container>\r\n\r\n<div className=\"map-image\">\r\n<img src={mapImages} alt=\"\" />\r\n</div>\r\n\r\n\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n\r\n\r\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","_jsxs","className","children","Container","_jsx","id","ref","onSubmit","e","preventDefault","emailjs","current","then","result","reset","window","location","reload","error","console","log","name","type","placeholder","required","rows","cols","value","src","mapImages","alt"],"sourceRoot":""}